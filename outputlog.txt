TESTS WITH ERRORS 
test13 (gradingtests.UnitTests)
Traceback (most recent call last):
  File "/Users/k2i/academics/automatedgradingapp/app/testing/kb-inference/gradingtests.py", line 373, in test13
    self.assertTrue(str(answer1[0]).startswith("No bindings"))
IndexError: list index out of range

test14 (gradingtests.UnitTests)
Traceback (most recent call last):
  File "/Users/k2i/academics/automatedgradingapp/app/testing/kb-inference/gradingtests.py", line 405, in test14
    KB.kb_retract(fact2)
  File "/Users/k2i/academics/automatedgradingapp/app/testing/kb-inference/student_code.py", line 138, in kb_retract
    f_index = supported_fact.supported_by.index(f)
AttributeError: 'NoneType' object has no attribute 'supported_by'

-------------------------------
TESTS FAILED  
test4 (gradingtests.UnitTests)
Traceback (most recent call last):
  File "/Users/k2i/academics/automatedgradingapp/app/testing/kb-inference/gradingtests.py", line 97, in test4
    self.assertFalse(answer5)
AssertionError: ListOfBindings([(Bindings({}, []), [Fact('fact', Statement('doctor', [Term(Constant('A'))]), False, [Fact('fact', Statement('wenttoschool', [Term(Constant('A'))]), True, [], [Fact('fact', Statement('doctor', [Term(Constant('A'))]), False, [...], [], [])], []), Rule('rule', [Statement('wenttoschool', [Term(Constant('A'))])], Statement('doctor', [Term(Constant('A'))]), False, [Fact('fact', Statement('goodman', [Term(Constant('A'))]), False, [], [], [Rule('rule', [Statement('wenttoschool', [Term(Constant('A'))])], Statement('doctor', [Term(Constant('A'))]), False, [...], [Fact('fact', Statement('doctor', [Term(Constant('A'))]), False, [...], [], [])], [])]), Rule('rule', [Statement('goodman', [Term(Variable('?x'))]), Statement('wenttoschool', [Term(Variable('?x'))])], Statement('doctor', [Term(Variable('?x'))]), True, [], [], [Rule('rule', [Statement('wenttoschool', [Term(Constant('A'))])], Statement('doctor', [Term(Constant('A'))]), False, [...], [Fact('fact', Statement('doctor', [Term(Constant('A'))]), False, [...], [], [])], [])])], [Fact('fact', Statement('doctor', [Term(Constant('A'))]), False, [...], [], [])], [])], [], [])])]) is not false

test5 (gradingtests.UnitTests)
Traceback (most recent call last):
  File "/Users/k2i/academics/automatedgradingapp/app/testing/kb-inference/gradingtests.py", line 151, in test5
    self.assertTrue(len(answer4) > 0)
AssertionError: False is not true

test9 (gradingtests.UnitTests)
Traceback (most recent call last):
  File "/Users/k2i/academics/automatedgradingapp/app/testing/kb-inference/gradingtests.py", line 264, in test9
    self.assertFalse(answer2)
AssertionError: ListOfBindings([(Bindings({}, []), [Fact('fact', Statement('rele', [Term(Constant('A')), Term(Constant('B')), Term(Constant('C'))]), False, [Fact('fact', Statement('reld', [Term(Constant('G')), Term(Constant('H')), Term(Constant('I'))]), True, [], [Fact('fact', Statement('rele', [Term(Constant('A')), Term(Constant('B')), Term(Constant('C'))]), False, [...], [], [])], []), Rule('rule', [Statement('reld', [Term(Constant('G')), Term(Constant('H')), Term(Constant('I'))])], Statement('rele', [Term(Constant('A')), Term(Constant('B')), Term(Constant('C'))]), False, [Fact('fact', Statement('relc', [Term(Constant('A')), Term(Constant('B')), Term(Constant('C')), Term(Constant('G')), Term(Constant('H')), Term(Constant('I'))]), False, [], [], [Rule('rule', [Statement('reld', [Term(Constant('G')), Term(Constant('H')), Term(Constant('I'))])], Statement('rele', [Term(Constant('A')), Term(Constant('B')), Term(Constant('C'))]), False, [...], [Fact('fact', Statement('rele', [Term(Constant('A')), Term(Constant('B')), Term(Constant('C'))]), False, [...], [], [])], [])]), Rule('rule', [Statement('relc', [Term(Variable('?a')), Term(Variable('?b')), Term(Variable('?c')), Term(Variable('?g')), Term(Variable('?h')), Term(Variable('?i'))]), Statement('reld', [Term(Variable('?g')), Term(Variable('?h')), Term(Variable('?i'))])], Statement('rele', [Term(Variable('?a')), Term(Variable('?b')), Term(Variable('?c'))]), True, [], [], [Rule('rule', [Statement('reld', [Term(Constant('G')), Term(Constant('H')), Term(Constant('I'))])], Statement('rele', [Term(Constant('A')), Term(Constant('B')), Term(Constant('C'))]), False, [...], [Fact('fact', Statement('rele', [Term(Constant('A')), Term(Constant('B')), Term(Constant('C'))]), False, [...], [], [])], [])])], [Fact('fact', Statement('rele', [Term(Constant('A')), Term(Constant('B')), Term(Constant('C'))]), False, [...], [], [])], [])], [], [])])]) is not false

-------------------------------
TESTS SKIPPED 
-------------------------------
